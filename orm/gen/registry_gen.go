// Code generated by erm. DO NOT EDIT.
package gen

import (
	"github.com/deicod/erm/orm/dsl"
	"github.com/deicod/erm/orm/runtime"
)

var Registry = runtime.Registry{
	Entities: map[string]runtime.EntitySpec{
		"Category": {
			Name:  "Category",
			Table: "categories",
			Fields: []runtime.FieldSpec{
				{Name: "id", Column: "id", GoType: "string", Type: dsl.TypeUUID, Primary: true, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "name", Column: "name", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "slug", Column: "slug", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "description", Column: "description", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "parent_id", Column: "parent_id", GoType: "*string", Type: dsl.TypeUUID, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "created_at", Column: "created_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: true, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "updated_at", Column: "updated_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: true, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
			},
			Edges: []runtime.EdgeSpec{
				{Name: "parent", Column: "parent_id", RefName: "", Through: "", Target: "Category", Kind: dsl.EdgeToOne, Nullable: true, Unique: false, Annotations: nil, Inverse: "", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeSetNull, OnUpdate: runtime.CascadeUnset}},
				{Name: "children", Column: "children", RefName: "parent", Through: "", Target: "Category", Kind: dsl.EdgeToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
				{Name: "posts", Column: "posts", RefName: "", Through: "post_categories", Target: "Post", Kind: dsl.EdgeManyToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "categories", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
			},
			Indexes: []runtime.IndexSpec{
				{Name: "categories_slug_key", Columns: []string{"slug"}, Unique: true, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
			},
		},
		"Comment": {
			Name:  "Comment",
			Table: "comments",
			Fields: []runtime.FieldSpec{
				{Name: "id", Column: "id", GoType: "string", Type: dsl.TypeUUID, Primary: true, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "post_id", Column: "post_id", GoType: "string", Type: dsl.TypeUUID, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "author_id", Column: "author_id", GoType: "*string", Type: dsl.TypeUUID, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "parent_id", Column: "parent_id", GoType: "*string", Type: dsl.TypeUUID, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "author_name", Column: "author_name", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "author_email", Column: "author_email", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "author_url", Column: "author_url", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "content", Column: "content", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "status", Column: "status", GoType: "string", Type: dsl.TypeEnum, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "'pending'", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"enum": true, "enum_name": "CommentStatus", "enum_values": []string{"pending", "approved", "spam", "trash"}}, EnumValues: []string{"pending", "approved", "spam", "trash"}, EnumName: "CommentStatus"},
				{Name: "submitted_at", Column: "submitted_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: true, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "published_at", Column: "published_at", GoType: "*time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "updated_at", Column: "updated_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: true, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
			},
			Edges: []runtime.EdgeSpec{
				{Name: "post", Column: "post_id", RefName: "", Through: "", Target: "Post", Kind: dsl.EdgeToOne, Nullable: false, Unique: false, Annotations: nil, Inverse: "comments", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeCascade, OnUpdate: runtime.CascadeUnset}},
				{Name: "author", Column: "author_id", RefName: "", Through: "", Target: "User", Kind: dsl.EdgeToOne, Nullable: true, Unique: false, Annotations: nil, Inverse: "comments", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeSetNull, OnUpdate: runtime.CascadeUnset}},
				{Name: "parent", Column: "parent_id", RefName: "", Through: "", Target: "Comment", Kind: dsl.EdgeToOne, Nullable: true, Unique: false, Annotations: nil, Inverse: "", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeCascade, OnUpdate: runtime.CascadeUnset}},
				{Name: "replies", Column: "replies", RefName: "parent", Through: "", Target: "Comment", Kind: dsl.EdgeToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
			},
			Indexes: []runtime.IndexSpec{
				{Name: "comments_post_submitted_at", Columns: []string{"post_id", "submitted_at"}, Unique: false, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
				{Name: "comments_status_post", Columns: []string{"status", "post_id"}, Unique: false, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
			},
		},
		"Media": {
			Name:  "Media",
			Table: "medias",
			Fields: []runtime.FieldSpec{
				{Name: "id", Column: "id", GoType: "string", Type: dsl.TypeUUID, Primary: true, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "uploaded_by_id", Column: "uploaded_by_id", GoType: "*string", Type: dsl.TypeUUID, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "file_name", Column: "file_name", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "mime_type", Column: "mime_type", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "storage_key", Column: "storage_key", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "url", Column: "url", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "title", Column: "title", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "alt_text", Column: "alt_text", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "caption", Column: "caption", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "description", Column: "description", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "file_size_bytes", Column: "file_size_bytes", GoType: "*int32", Type: dsl.TypeInteger, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "metadata", Column: "metadata", GoType: "json.RawMessage", Type: dsl.TypeJSONB, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"format": "jsonb"}, EnumValues: nil, EnumName: ""},
				{Name: "created_at", Column: "created_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: true, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "updated_at", Column: "updated_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: true, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
			},
			Edges: []runtime.EdgeSpec{
				{Name: "uploaded_by", Column: "uploaded_by_id", RefName: "", Through: "", Target: "User", Kind: dsl.EdgeToOne, Nullable: true, Unique: false, Annotations: nil, Inverse: "media", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeSetNull, OnUpdate: runtime.CascadeUnset}},
				{Name: "featured_in_posts", Column: "featured_in_posts", RefName: "featured_media", Through: "", Target: "Post", Kind: dsl.EdgeToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
			},
			Indexes: []runtime.IndexSpec{
				{Name: "media_storage_key_key", Columns: []string{"storage_key"}, Unique: true, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
			},
		},
		"Option": {
			Name:  "Option",
			Table: "options",
			Fields: []runtime.FieldSpec{
				{Name: "id", Column: "id", GoType: "string", Type: dsl.TypeUUID, Primary: true, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "name", Column: "name", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "value", Column: "value", GoType: "json.RawMessage", Type: dsl.TypeJSONB, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"format": "jsonb"}, EnumValues: nil, EnumName: ""},
				{Name: "autoload", Column: "autoload", GoType: "bool", Type: dsl.TypeBoolean, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "FALSE", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "created_at", Column: "created_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: true, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "updated_at", Column: "updated_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: true, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
			},
			Edges: []runtime.EdgeSpec{},
			Indexes: []runtime.IndexSpec{
				{Name: "options_name_key", Columns: []string{"name"}, Unique: true, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
			},
		},
		"Post": {
			Name:  "Post",
			Table: "posts",
			Fields: []runtime.FieldSpec{
				{Name: "id", Column: "id", GoType: "string", Type: dsl.TypeUUID, Primary: true, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "author_id", Column: "author_id", GoType: "string", Type: dsl.TypeUUID, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "featured_media_id", Column: "featured_media_id", GoType: "*string", Type: dsl.TypeUUID, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "title", Column: "title", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "slug", Column: "slug", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "status", Column: "status", GoType: "string", Type: dsl.TypeEnum, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "'draft'", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"enum": true, "enum_name": "PostStatus", "enum_values": []string{"draft", "pending", "private", "published", "archived"}}, EnumValues: []string{"draft", "pending", "private", "published", "archived"}, EnumName: "PostStatus"},
				{Name: "type", Column: "type", GoType: "string", Type: dsl.TypeEnum, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "'post'", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"enum": true, "enum_name": "PostType", "enum_values": []string{"post", "page", "custom"}}, EnumValues: []string{"post", "page", "custom"}, EnumName: "PostType"},
				{Name: "excerpt", Column: "excerpt", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "content", Column: "content", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "seo", Column: "seo", GoType: "json.RawMessage", Type: dsl.TypeJSONB, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"format": "jsonb"}, EnumValues: nil, EnumName: ""},
				{Name: "published_at", Column: "published_at", GoType: "*time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "created_at", Column: "created_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: true, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "updated_at", Column: "updated_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: true, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
			},
			Edges: []runtime.EdgeSpec{
				{Name: "author", Column: "author_id", RefName: "", Through: "", Target: "User", Kind: dsl.EdgeToOne, Nullable: false, Unique: false, Annotations: nil, Inverse: "posts", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeRestrict, OnUpdate: runtime.CascadeUnset}},
				{Name: "featured_media", Column: "featured_media_id", RefName: "", Through: "", Target: "Media", Kind: dsl.EdgeToOne, Nullable: true, Unique: false, Annotations: nil, Inverse: "featured_in_posts", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeSetNull, OnUpdate: runtime.CascadeUnset}},
				{Name: "comments", Column: "comments", RefName: "post", Through: "", Target: "Comment", Kind: dsl.EdgeToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
				{Name: "categories", Column: "categories", RefName: "", Through: "post_categories", Target: "Category", Kind: dsl.EdgeManyToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "posts", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
				{Name: "tags", Column: "tags", RefName: "", Through: "post_tags", Target: "Tag", Kind: dsl.EdgeManyToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "posts", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
			},
			Indexes: []runtime.IndexSpec{
				{Name: "posts_slug_key", Columns: []string{"slug"}, Unique: true, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
				{Name: "posts_status_published_at", Columns: []string{"status", "published_at"}, Unique: false, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
				{Name: "posts_author_created_at", Columns: []string{"author_id", "created_at"}, Unique: false, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
			},
		},
		"Role": {
			Name:  "Role",
			Table: "roles",
			Fields: []runtime.FieldSpec{
				{Name: "id", Column: "id", GoType: "string", Type: dsl.TypeUUID, Primary: true, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "name", Column: "name", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "slug", Column: "slug", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "description", Column: "description", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "capabilities", Column: "capabilities", GoType: "json.RawMessage", Type: dsl.TypeJSONB, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"format": "jsonb"}, EnumValues: nil, EnumName: ""},
				{Name: "created_at", Column: "created_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: true, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "updated_at", Column: "updated_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: true, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
			},
			Edges: []runtime.EdgeSpec{
				{Name: "users", Column: "users", RefName: "", Through: "user_roles", Target: "User", Kind: dsl.EdgeManyToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "roles", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
			},
			Indexes: []runtime.IndexSpec{
				{Name: "roles_slug_key", Columns: []string{"slug"}, Unique: true, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
			},
		},
		"Tag": {
			Name:  "Tag",
			Table: "tags",
			Fields: []runtime.FieldSpec{
				{Name: "id", Column: "id", GoType: "string", Type: dsl.TypeUUID, Primary: true, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "name", Column: "name", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "slug", Column: "slug", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "description", Column: "description", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "created_at", Column: "created_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: true, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "updated_at", Column: "updated_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: true, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
			},
			Edges: []runtime.EdgeSpec{
				{Name: "posts", Column: "posts", RefName: "", Through: "post_tags", Target: "Post", Kind: dsl.EdgeManyToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "tags", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
			},
			Indexes: []runtime.IndexSpec{
				{Name: "tags_slug_key", Columns: []string{"slug"}, Unique: true, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
			},
		},
		"User": {
			Name:  "User",
			Table: "users",
			Fields: []runtime.FieldSpec{
				{Name: "id", Column: "id", GoType: "string", Type: dsl.TypeUUID, Primary: true, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "username", Column: "username", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "email", Column: "email", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "password_hash", Column: "password_hash", GoType: "string", Type: dsl.TypeText, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: map[string]any{"notEmpty": true}, EnumValues: nil, EnumName: ""},
				{Name: "display_name", Column: "display_name", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "bio", Column: "bio", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "avatar_url", Column: "avatar_url", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "website_url", Column: "website_url", GoType: "*string", Type: dsl.TypeText, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "last_login_at", Column: "last_login_at", GoType: "*time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: true, Unique: false, DefaultNow: false, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "created_at", Column: "created_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: true, UpdateNow: false, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
				{Name: "updated_at", Column: "updated_at", GoType: "time.Time", Type: dsl.TypeTimestampTZ, Primary: false, Nullable: false, Unique: false, DefaultNow: false, UpdateNow: true, DefaultExpr: "", ReadOnly: false, ComputedSpec: nil, Annotations: nil, EnumValues: nil, EnumName: ""},
			},
			Edges: []runtime.EdgeSpec{
				{Name: "posts", Column: "posts", RefName: "author", Through: "", Target: "Post", Kind: dsl.EdgeToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
				{Name: "comments", Column: "comments", RefName: "author", Through: "", Target: "Comment", Kind: dsl.EdgeToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
				{Name: "media", Column: "media", RefName: "uploaded_by", Through: "", Target: "Media", Kind: dsl.EdgeToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
				{Name: "roles", Column: "roles", RefName: "", Through: "user_roles", Target: "Role", Kind: dsl.EdgeManyToMany, Nullable: false, Unique: false, Annotations: nil, Inverse: "users", PolymorphicTargets: nil, Cascade: runtime.CascadeSpec{OnDelete: runtime.CascadeUnset, OnUpdate: runtime.CascadeUnset}},
			},
			Indexes: []runtime.IndexSpec{
				{Name: "users_username_key", Columns: []string{"username"}, Unique: true, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
				{Name: "users_email_key", Columns: []string{"email"}, Unique: true, Where: "", Method: "", NullsNotDistinct: false, Annotations: nil},
			},
		},
	},
}
